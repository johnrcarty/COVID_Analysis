customer1 <- c('John', 'Carty', 'M')
install.packages("albersusa")
devtools::install_github("hrbrmstr/albersusa")
install.packages("devtools")
devtools::install_github("hrbrmstr/albersusa")
library(albersusa)
library(sf)
library(sp)
library(rgeos)
library(maptools)
library(ggplot2)
library(ggalt)
library(ggthemes)
library(viridis)
library(scales)
install.packages(c('sf', 'sp', 'rgeos', 'maptools', 'ggplot2', 'ggalt', 'ggthemes'))
install.packages(c("sf", "sp", "rgeos", "maptools", "ggplot2", "ggalt", "ggthemes"))
install.packages("viridis")
install.packages("scales")
library(albersusa)
library(sf)
library(sp)
library(rgeos)
library(maptools)
library(ggplot2)
library(ggalt)
library(ggthemes)
library(viridis)
library(scales)
us <- usa_composite(proj = "aeqd")
states_centers <- as.data.frame(state.center)
states_centers$name <- state.name
View(states_centers)
install.packages("RMySQL")
yes
Yes
install.packages("RMySQL")
install.packages("RMySQL")
library(RMySQL)
mydb = dbConnect(MySQL(), user='jcarty'
, password='Ameli@01'
, dbname='app_Chores'
, host='127.0.0.1:3306')
mydb = dbConnect(MySQL(), user='root'
, password='Ameli@01'
, dbname='app_Chores'
, host='127.0.0.1:3306')
mydb = dbConnect(MySQL(), user='root'
, password='fckths123'
, dbname='app_Chores'
, host='127.0.0.1:3306')
mydb = dbConnect(MySQL(), user='root'
, password='Ameli@02'
, dbname='app_Chores'
, host='127.0.0.1:3306')
mydb = dbConnect(MySQL(), user='johncarty'
, password='Ameli@01'
, dbname='app_Chores'
, host='127.0.0.1:3306')
library(RMySQL)
mydb = dbConnect(MySQL(), user='johncarty'
, password='Ameli@01'
, dbname='app_Chores'
, host='127.0.0.1:3306')
mydb = dbConnect(MySQL(), user='johncarty'
, password='Ameli@01'
, dbname='app_Chores'
, host='127.0.0.1')
install.packages("libmariadbclien")
library(RCurl)
install.packages('RCurl')
yes
install.packages('RCurl')
library(RCurl)
x <- getURL("https://raw.github.com/aronlindberg/latent_growth_classes/master/LGC_data.csv")
y <- read.csv(text = x)
x
x <- getURL("https://github.com/owid/covid-19-data/blob/master/public/data/owid-covid-data.csv")
y <- read.csv(text = x)
View(y)
x <- getURL("https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/owid-covid-data.csv")
y <- read.csv(text = x)
y <- read.csv(text = x, stringsAsFactors = FALSE)
class(y$date)
y$date <- as.Date(y$date)
x <- getURL("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv")
y <- read.csv(text = x, stringsAsFactors = FALSE)
names(y)
summary(y)
unique(y$code3)
y[1,0]
y[1,]
y[y$code3 == 16,]
unique(y$iso3)
y <- subset(y, code3 == 'USA')
y <- read.csv(text = x, stringsAsFactors = FALSE)
y <- subset(y, y$code3 == 'USA')
y <- subset(y, iso3 == 'USA')
y <- read.csv(text = x, stringsAsFactors = FALSE)
y <- subset(y, iso3 == 'USA')
unique(y$iso3)
View(y)
unique(y$code3)
y_redCol <- y[,5:ncol(y)]
View(y_redCol)
x <- getURL("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv")
dailyCases <- read.csv(text = x, stringsAsFactors = FALSE)
View(dailyCases)
v <- getURL("https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/vaccinations/us_state_vaccinations.csv")
v
dailyVaccines <- read.csv(text = v, stringsAsFactors = FALSE)
View(dailyVaccines)
names(dailyVaccines)
names(dailyVaccines)[2] <- 'state'
merge(dailyCases, dailyVaccines)
casesVaccines.byDay <- merge(dailyCases, dailyVaccines)
View(casesVaccines.byDay)
casesVaccines.byDay.CA <- subset(casesVaccines.byDay, state=="California")
View(casesVaccines.byDay.CA)
casesVaccines.byDay <- merge(dailyCases, dailyVaccines, by=c('date', 'state'))
casesVaccines.byDay$date <- as.Date(casesVaccines.byDay$date)
casesVaccines.byDay.CA <- subset(casesVaccines.byDay, state=="California")
casesVaccines.byDay.CA
getwd()
setwd('desktop/covid_analysis')
#US Census data downloaded from
#https://data.census.gov/cedsci/map?q=Total%20Population%20in%20the%20United%20States&g=0100000US.04000.001&tid=PEPPOP2019.PEPANNRES&vintage=2019&layer=VT_2019_040_00_PP_D1&cid=POP&mode=thematic
read.csv("PEPPOP2019.PEPANNRES_data_with_overlays_2021-03-25T125809.csv", stringsAsFactors = FALSE)
#US Census data downloaded from
#https://data.census.gov/cedsci/map?q=Total%20Population%20in%20the%20United%20States&g=0100000US.04000.001&tid=PEPPOP2019.PEPANNRES&vintage=2019&layer=VT_2019_040_00_PP_D1&cid=POP&mode=thematic
census <- read.csv("PEPPOP2019.PEPANNRES_data_with_overlays_2021-03-25T125809.csv", stringsAsFactors = FALSE)
as.numeric(data.frame(strsplit(census$DATE_CODE, " "))[1,])
data.frame(strsplit(census$DATE_CODE, " "))[1,]
strsplit(census$DATE_CODE, " ")
data.frame(strsplit(census$DATE_CODE, " "))
lapply(strsplit(census$DATE_CODE," "), function(x) x[2])
lapply(strsplit(census$DATE_CODE," "), function(x) x[1])
data.frame(lapply(strsplit(census$DATE_CODE," "), function(x) x[1]))
lapply(strsplit(census$DATE_CODE," "), function(x) x[1])
lapply(strsplit(census$DATE_CODE," "), function(x) x[1])[]
lapply(strsplit(census$DATE_CODE," "), function(x) x[1])[]
unique(census$DATE_CODE)
census <- subset(census, DATE_CODE=="7/1/2019 population estimate")
census
#merge the census data in
casesVaccines.final <- merge(casesVaccines, census, by.x="state", by.y="NAME")
#merge the cases data set to the vaccines dataset
casesVaccines<- merge(dailyCases, dailyVaccines, by=c('date', 'state'))
casesVaccines$date <- as.Date(casesVaccines$date)
#merge the census data in
casesVaccines.final <- merge(casesVaccines, census, by.x="state", by.y="NAME")
casesVaccines.final
census.redCol <- census[,c("Name", "POP")]
census.redCol <- census[c("Name", "POP"),]
census.redCol
census
census.redCol <- census[,c(2,4)]
census.redCol
#merge the census data in
casesVaccines.final <- merge(casesVaccines, census.redCol, by.x="state", by.y="NAME")
casesVaccines.final
#merge the census data in
casesVaccines.final <- merge(casesVaccines, census.redCol, by.x="state", by.y="NAME")
casesVaccines.byDay.CA <- subset(casesVaccines.byDay, state=="California")
casesVaccines.byDay.CA
names(casesVaccines.byDay.CA)
#merge the census data in
casesVaccines.final <- merge(casesVaccines, census.redCol, by.x="state", by.y="NAME")
casesVaccines.byDay.CA <- subset(casesVaccines.final, state=="California")
names(casesVaccines.byDay.CA)
match(x, names(names(casesVaccines.byDay.CA)))
which(names(casesVaccines.byDay.CA) == x)
x
x <- "cases"
y <- "people_fully_vaccinated"
which(names(casesVaccines.byDay.CA) == x)
x.pos <- which(names(casesVaccines.byDay.CA) == x)
y.pos <- which(names(casesVaccines.byDay.CA) == y)
small <- casesVaccines.byDay.CA[1,x.pos, y.pos]
small
small <- casesVaccines.byDay.CA[,c(1,x.pos, y.pos)]
small
x.pos
y.pos
names(casesVaccines.byDay.CA)
library(RCurl)
setwd('desktop/covid_analysis')
#Get us covid cases by month posted by NY Times
x <- getURL("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv")
dailyCases <- read.csv(text = x, stringsAsFactors = FALSE)
dailyCases <- subset(dailyCases, iso3 == 'USA')
dailyCases_redCol <- dailyCases[,5:ncol(dailyCases)]
#Our World in Data's vaccination records by month
v <- getURL("https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/vaccinations/us_state_vaccinations.csv")
dailyVaccines <- read.csv(text = v, stringsAsFactors = FALSE)
names(dailyVaccines)[2] <- 'state'
#US Census data downloaded from
#https://data.census.gov/cedsci/map?q=Total%20Population%20in%20the%20United%20States&g=0100000US.04000.001&tid=PEPPOP2019.PEPANNRES&vintage=2019&layer=VT_2019_040_00_PP_D1&cid=POP&mode=thematic
census <- read.csv("PEPPOP2019.PEPANNRES_data_with_overlays_2021-03-25T125809.csv", stringsAsFactors = FALSE)
unique(census$DATE_CODE) #"7/1/2019 population estimate"
census <- subset(census, DATE_CODE=="7/1/2019 population estimate")
census.redCol <- census[,c(2,4)]
#merge the cases data set to the vaccines dataset
casesVaccines<- merge(dailyCases, dailyVaccines, by=c('date', 'state'))
casesVaccines$date <- as.Date(casesVaccines$date)
#merge the census data in
casesVaccines.final <- merge(casesVaccines, census.redCol, by.x="state", by.y="NAME")
casesVaccines.byDay.CA <- subset(casesVaccines.final, state=="California")
names(casesVaccines.byDay.CA)
small <- casesVaccines.byDay.CA[,c(2,x.pos, y.pos)]
small
small[small$people_fully_vaccinated == "NA"]
small[small$people_fully_vaccinated == "NA",]
small$people_fully_vaccinated == "NA"
is.na(small$people_fully_vaccinated)
p1 <- ggplot(small, aes(x=date, y=cases)) +
geom_line(color="#69b3a2", size=2) +
ggtitle("COVID 19 Cases") +
theme_ipsum()
library(ggplot2)
# Most basic line chart
p1 <- ggplot(small, aes(x=date, y=cases)) +
geom_line(color="#69b3a2", size=2) +
ggtitle("COVID 19 Cases") +
theme_ipsum()
library(RCurl)
library(ggplot2)
library(dplyr)
library(patchwork)
library(hrbrthemes)
install.packages('patchwork')
install.packages('hrbrthemes')
install.packages("hrbrthemes")
library(RCurl)
library(ggplot2)
library(dplyr)
library(patchwork)
library(hrbrthemes)
update.packages()
lapply(update.packages, "yes")
lapply(update.packages, function(x), x="yes")
lapply(update.packages, function(x) x="yes")
update.packages(ask = FALSE)
# Most basic line chart
p1 <- ggplot(small, aes(x=date, y=cases)) +
geom_line(color="#69b3a2", size=2) +
ggtitle("COVID 19 Cases") +
theme_ipsum()
library(RCurl)
library(ggplot2)
library(dplyr)
library(patchwork)
library(hrbrthemes)
